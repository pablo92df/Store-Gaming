// <auto-generated />
using System;
using DATA;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DATA.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DATA.Entities.Categoria", b =>
                {
                    b.Property<int>("idCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("nombreCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("DATA.Entities.Compra", b =>
                {
                    b.Property<int>("idCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ProveedoridProveedor")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("montoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idCompra");

                    b.HasIndex("ProveedoridProveedor");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("DATA.Entities.ComprasDetalle", b =>
                {
                    b.Property<int>("idComprasDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CompraidCompra")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoidProducto")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idComprasDetalle");

                    b.HasIndex("CompraidCompra");

                    b.HasIndex("ProductoidProducto");

                    b.ToTable("ComprasDetalle");
                });

            modelBuilder.Entity("DATA.Entities.DetalleVenta", b =>
                {
                    b.Property<int>("idDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ProductoidProducto")
                        .HasColumnType("int");

                    b.Property<int>("VentaidVenta")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idDetalleVenta");

                    b.HasIndex("ProductoidProducto");

                    b.HasIndex("VentaidVenta");

                    b.ToTable("DetalleVenta");
                });

            modelBuilder.Entity("DATA.Entities.Empleado", b =>
                {
                    b.Property<int>("idEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("pass")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idEmpleado");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("DATA.Entities.Marca", b =>
                {
                    b.Property<int>("idMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("nombreMarca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idMarca");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("DATA.Entities.Producto", b =>
                {
                    b.Property<int>("idProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CategoriaidCategoria")
                        .HasColumnType("int");

                    b.Property<int?>("MarcaidMarca")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("idProducto");

                    b.HasIndex("CategoriaidCategoria");

                    b.HasIndex("MarcaidMarca");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("DATA.Entities.Proveedor", b =>
                {
                    b.Property<int>("idProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("idProveedor");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("DATA.Entities.Venta", b =>
                {
                    b.Property<int>("idVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("empleadoidEmpleado")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idVenta");

                    b.HasIndex("empleadoidEmpleado");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("DATA.Entities.productoProveedor", b =>
                {
                    b.Property<int>("idProductoProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ProductoidProducto")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedoridProveedor")
                        .HasColumnType("int");

                    b.HasKey("idProductoProveedor");

                    b.HasIndex("ProductoidProducto");

                    b.HasIndex("ProveedoridProveedor");

                    b.ToTable("productoProveedor");
                });

            modelBuilder.Entity("DATA.Entities.Compra", b =>
                {
                    b.HasOne("DATA.Entities.Proveedor", "Proveedor")
                        .WithMany("Compras")
                        .HasForeignKey("ProveedoridProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("DATA.Entities.ComprasDetalle", b =>
                {
                    b.HasOne("DATA.Entities.Compra", "Compra")
                        .WithMany("ComprasDetalles")
                        .HasForeignKey("CompraidCompra");

                    b.HasOne("DATA.Entities.Producto", "Producto")
                        .WithMany("ComprasDetalles")
                        .HasForeignKey("ProductoidProducto");

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DATA.Entities.DetalleVenta", b =>
                {
                    b.HasOne("DATA.Entities.Producto", "Producto")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("ProductoidProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DATA.Entities.Venta", "Venta")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("VentaidVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("DATA.Entities.Producto", b =>
                {
                    b.HasOne("DATA.Entities.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaidCategoria");

                    b.HasOne("DATA.Entities.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("MarcaidMarca");

                    b.Navigation("Categoria");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("DATA.Entities.Venta", b =>
                {
                    b.HasOne("DATA.Entities.Empleado", "empleado")
                        .WithMany("Ventas")
                        .HasForeignKey("empleadoidEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empleado");
                });

            modelBuilder.Entity("DATA.Entities.productoProveedor", b =>
                {
                    b.HasOne("DATA.Entities.Producto", "Producto")
                        .WithMany("productoProveedors")
                        .HasForeignKey("ProductoidProducto");

                    b.HasOne("DATA.Entities.Proveedor", "Proveedor")
                        .WithMany("productoProveedors")
                        .HasForeignKey("ProveedoridProveedor");

                    b.Navigation("Producto");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("DATA.Entities.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("DATA.Entities.Compra", b =>
                {
                    b.Navigation("ComprasDetalles");
                });

            modelBuilder.Entity("DATA.Entities.Empleado", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("DATA.Entities.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("DATA.Entities.Producto", b =>
                {
                    b.Navigation("ComprasDetalles");

                    b.Navigation("DetalleVentas");

                    b.Navigation("productoProveedors");
                });

            modelBuilder.Entity("DATA.Entities.Proveedor", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("productoProveedors");
                });

            modelBuilder.Entity("DATA.Entities.Venta", b =>
                {
                    b.Navigation("DetalleVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
